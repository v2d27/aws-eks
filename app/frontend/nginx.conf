# Run as current user (node) - no user directive needed
worker_processes auto;
error_log /dev/stderr notice;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging to stdout/stderr for Docker
    access_log /dev/stdout;
    error_log /dev/stderr;

    # Temp directories for non-root user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    sendfile on;
    #tcp_nopush on;
    keepalive_timeout 65;

    server {
        listen 3000;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint
        location /healthz {
            access_log off;
            return 200 '{"status": "healthy", "service": "frontend"}\n';
            add_header Content-Type application/json;
        }

        # Main application
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # # Security headers
        # add_header X-Frame-Options "SAMEORIGIN" always;
        # add_header X-XSS-Protection "1; mode=block" always;
        # add_header X-Content-Type-Options "nosniff" always;
        # add_header Referrer-Policy "no-referrer-when-downgrade" always;
        # add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }
}
